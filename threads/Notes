* A thread is an individual process that has its own call stack.
* There is always one thread per call stack or one call stack per thread or each thread has its own call stack.
* Main thread can exit before child thread. Main thread is a non daemon thread.
* When JVM starts --> a thread then calls the Main method of a specific class.
* JVM continues to execute threads until System.exit or All non-daemon threads have exited.
* Application servers have self managed thread pool.
* Thread Local is like thread scope. Global and local specific to thread.
* Using thread local, if a thread calls methods from several classes then all the methods can access thread local set by other methods.
* Callable and Runnable are both interfaces for tasks that are to executed by multiple threads.
* Runnable can be executed by both thread or ExecutorService. Callable only by ExecutorService.
* Runnable does not return value.
* Callable does return value in form of future and can throw a checked exception. 
* every object in java can act as a monitor that has an lock, a entry queue and waiting queue. synchronized method of an object can only be executed by a thread, if it has lock for that object. if a thread invokes a synchronized method and another thread owns the lock, then this thread goes into blocked state and put in the entry queue.
* wait(), notify() and notifyAll() should be called in synchronized context only otherwise illegalmonitor exception is thrown. wait and notify relate to communication between threads. 
* wait method is part of object class. when a thread calls the wait method it releases the lock it is holding and is moved to the waiting queue of this lock. the reason to call wait is that a thread wants to sit idle until a particular state is achieved.
* the reason to call notify is that thread wants to notify other threads that particular state has been achieved. this state is a communication channel between threads. if these methods are not called in synchronized context, they will not be communicate the state to other threads.
